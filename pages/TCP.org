* #networking, #protocol, #todo
* Transmission Control Protocol
Reliable Data Transfer
* Multiplexing and Demultiplexing
** Is more complicated
TCP use more sophisticated approach than the one described in [[transport layer]].
This because of how the TCP work, just think about the connection, when a TCP connection is established it create a new socket on which the client can communicate.
Hence IT need more information.
** Parameter used
Other than the ~source port~ and the ~destination port~ it bundle also the ~source IP~ and ~destination IP~.
With this information extra TCP can distinguish the request and redirect to the correct socket, (basically the host must have a [[map]] of the connections)
* TCP Connection
TCP is ~connection oriented~ hence when 2 host want to communicate they need first to establish a connection.
This connection lives only on the 2 host, the layer below the [[transport layer]] don't know nothing about TCP, they just receive and send datagram.
TCP is a ~full duplex service~.
TCP is a ~Point to Point~ connection, it happen only between 2 hosts, a multicast communication is not possible with TCP.
* Buffers
[[../assets/tcp_buffers.png]]
* Three-way Handshake
TCP perform a three-way handshake to initialize a connection.